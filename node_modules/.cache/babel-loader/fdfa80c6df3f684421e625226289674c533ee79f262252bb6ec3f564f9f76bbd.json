{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || '';\nexport const useSavedRoutes = () => {\n  _s();\n  const [savedRoutes, setSavedRoutes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const getWorkingAPIUrl = useCallback(async () => {\n    const urls = [`${API_BASE_URL}/database.php`, 'http://localhost:8080/database.php', '/database.php'];\n    for (const url of urls) {\n      try {\n        console.log('üß™ Testar URL:', url);\n        const response = await fetch(`${url}?action=load`);\n        if (response.ok) {\n          console.log('‚úÖ Fungerande URL hittad:', url);\n          return url.replace('/database.php', '');\n        }\n      } catch (error) {\n        console.log('‚ùå URL fungerar inte:', url, error);\n      }\n    }\n    throw new Error('Ingen fungerande API-URL hittades');\n  }, []);\n  const loadSavedRoutes = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const baseUrl = await getWorkingAPIUrl();\n      const response = await fetch(`${baseUrl}/database.php?action=load`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setSavedRoutes(data);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Ok√§nt fel';\n      setError(errorMessage);\n      console.error('Fel vid laddning av rutter:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [getWorkingAPIUrl]);\n  const saveRoute = useCallback(async (name, addresses) => {\n    if (!name.trim()) {\n      throw new Error('Ruttnamn kr√§vs');\n    }\n    if (addresses.length === 0) {\n      throw new Error('Minst en adress kr√§vs');\n    }\n    try {\n      const baseUrl = await getWorkingAPIUrl();\n      const response = await fetch(`${baseUrl}/database.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          action: 'save',\n          name: name.trim(),\n          addresses: addresses\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      if (result.success) {\n        await loadSavedRoutes(); // Ladda om listan\n        return result;\n      } else {\n        throw new Error(result.message || 'Fel vid sparande av rutt');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Ok√§nt fel';\n      throw new Error(errorMessage);\n    }\n  }, [getWorkingAPIUrl, loadSavedRoutes]);\n  const loadRoute = useCallback(async routeId => {\n    try {\n      const baseUrl = await getWorkingAPIUrl();\n      const response = await fetch(`${baseUrl}/database.php?action=load_route&id=${routeId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Ok√§nt fel';\n      throw new Error(errorMessage);\n    }\n  }, [getWorkingAPIUrl]);\n  const deleteRoute = useCallback(async (routeId, routeName) => {\n    if (!window.confirm(`√Ñr du s√§ker p√• att du vill ta bort rutten \"${routeName}\"?`)) {\n      return false;\n    }\n    try {\n      const baseUrl = await getWorkingAPIUrl();\n      const response = await fetch(`${baseUrl}/database.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          action: 'delete',\n          id: routeId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      if (result.success) {\n        await loadSavedRoutes(); // Ladda om listan\n        return true;\n      } else {\n        throw new Error(result.message || 'Fel vid borttagning av rutt');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Ok√§nt fel';\n      throw new Error(errorMessage);\n    }\n  }, [getWorkingAPIUrl, loadSavedRoutes]);\n\n  // Ladda sparade rutter vid mount\n  useEffect(() => {\n    loadSavedRoutes();\n  }, [loadSavedRoutes]);\n  return {\n    savedRoutes,\n    loading,\n    error,\n    loadSavedRoutes,\n    saveRoute,\n    loadRoute,\n    deleteRoute\n  };\n};\n_s(useSavedRoutes, \"8HJ8UzRVtqKmMsN40RHvXAHdpn8=\");","map":{"version":3,"names":["useState","useCallback","useEffect","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","useSavedRoutes","_s","savedRoutes","setSavedRoutes","loading","setLoading","error","setError","getWorkingAPIUrl","urls","url","console","log","response","fetch","ok","replace","Error","loadSavedRoutes","baseUrl","status","data","json","err","errorMessage","message","saveRoute","name","addresses","trim","length","method","headers","body","JSON","stringify","action","result","success","loadRoute","routeId","deleteRoute","routeName","window","confirm","id"],"sources":["/home/blixen66/H√§mtningar/skoltransporter/skoltransport/src/hooks/useSavedRoutes.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { SavedRoute } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || '';\n\nexport const useSavedRoutes = () => {\n  const [savedRoutes, setSavedRoutes] = useState<SavedRoute[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const getWorkingAPIUrl = useCallback(async () => {\n    const urls = [\n      `${API_BASE_URL}/database.php`,\n      'http://localhost:8080/database.php',\n      '/database.php'\n    ];\n    \n    for (const url of urls) {\n      try {\n        console.log('üß™ Testar URL:', url);\n        const response = await fetch(`${url}?action=load`);\n        if (response.ok) {\n          console.log('‚úÖ Fungerande URL hittad:', url);\n          return url.replace('/database.php', '');\n        }\n      } catch (error) {\n        console.log('‚ùå URL fungerar inte:', url, error);\n      }\n    }\n    \n    throw new Error('Ingen fungerande API-URL hittades');\n  }, []);\n\n  const loadSavedRoutes = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const baseUrl = await getWorkingAPIUrl();\n      const response = await fetch(`${baseUrl}/database.php?action=load`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setSavedRoutes(data);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Ok√§nt fel';\n      setError(errorMessage);\n      console.error('Fel vid laddning av rutter:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [getWorkingAPIUrl]);\n\n  const saveRoute = useCallback(async (name: string, addresses: string[]) => {\n    if (!name.trim()) {\n      throw new Error('Ruttnamn kr√§vs');\n    }\n    \n    if (addresses.length === 0) {\n      throw new Error('Minst en adress kr√§vs');\n    }\n\n    try {\n      const baseUrl = await getWorkingAPIUrl();\n      const response = await fetch(`${baseUrl}/database.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          action: 'save',\n          name: name.trim(),\n          addresses: addresses,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      if (result.success) {\n        await loadSavedRoutes(); // Ladda om listan\n        return result;\n      } else {\n        throw new Error(result.message || 'Fel vid sparande av rutt');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Ok√§nt fel';\n      throw new Error(errorMessage);\n    }\n  }, [getWorkingAPIUrl, loadSavedRoutes]);\n\n  const loadRoute = useCallback(async (routeId: number) => {\n    try {\n      const baseUrl = await getWorkingAPIUrl();\n      const response = await fetch(`${baseUrl}/database.php?action=load_route&id=${routeId}`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      return data;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Ok√§nt fel';\n      throw new Error(errorMessage);\n    }\n  }, [getWorkingAPIUrl]);\n\n  const deleteRoute = useCallback(async (routeId: number, routeName: string) => {\n    if (!window.confirm(`√Ñr du s√§ker p√• att du vill ta bort rutten \"${routeName}\"?`)) {\n      return false;\n    }\n\n    try {\n      const baseUrl = await getWorkingAPIUrl();\n      const response = await fetch(`${baseUrl}/database.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          action: 'delete',\n          id: routeId,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      if (result.success) {\n        await loadSavedRoutes(); // Ladda om listan\n        return true;\n      } else {\n        throw new Error(result.message || 'Fel vid borttagning av rutt');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Ok√§nt fel';\n      throw new Error(errorMessage);\n    }\n  }, [getWorkingAPIUrl, loadSavedRoutes]);\n\n  // Ladda sparade rutter vid mount\n  useEffect(() => {\n    loadSavedRoutes();\n  }, [loadSavedRoutes]);\n\n  return {\n    savedRoutes,\n    loading,\n    error,\n    loadSavedRoutes,\n    saveRoute,\n    loadRoute,\n    deleteRoute,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}